{
  "last-articles": [
    {
      "id": 1,
      "title": "What is Angular",
      "subtitle": "Why does front-end developer need it.",
      "type": "How to",
      "typeCode": "how-to",
      "date": "2021-03-16T00:11:33.434+00:00",
      "difficulty": "medium",
      "img": "https://thecode.media/wp-content/uploads/2021/03/photo_2021-03-16-12.15.19-1080x718.jpeg",
      "content": "When looking at front end jobs, we often see three words: Angular, React, and Vue. They are equivalent technologies that are equally popular and vary in detail. Diving into the details takes time, and therefore developers usually choose one thing - study what they like best.\n\nToday we will take a look at Angular. Let's figure out how the technology works and what you need to know to study it.\n\nAngular is a Google framework. It is needed to develop browser, desktop and mobile applications - those where you can quickly and seamlessly navigate the site.\nAngular works on the SPA principle, a single-page application. To understand what it is, one must first understand what it is not.\n\nThe traditional approach to web applications was something like this:\n\nThe user went to the site.\nThe browser sent a server request to find the desired address.\nThe server found the page and passed it to the site.\nA user looked at this page and clicked on some link.\nThe browser generated a second request, the server collected a new page and returned it to the site again. The cycle was repeated after each user action.\nThis can be compared to ordering food in a restaurant, with the only difference that you can order only one dish at a time. I ordered a salad, ate it, and only then ordered a hot one. Now you sit and wait for it to be brought to you. Ate hot - ordered tea. You wait for the kettle to boil. They brought tea - ordered dessert. You are waiting for the cakes to rise. Here's the same thing, only a thousand times faster.\n\nSlow sites annoyed everyone, and the developers came up with SPA - first the technology appeared, and then Angular and other tools for its implementation.\n\nWhat is SPA, single-page application\nSingle-page application stands for \"one page application\". It works like this:\n\nThe user goes to the site.\nThe browser sends a server request.\nThe server returns the page at the requested URL.\nWhile the user is on the first page, the server packs and transmits all other pages in the background.\nWhen a user needs to go to another page, he has everything he needs “in the background” already loaded.\nAngular applications are made up of independent elements. These elements are called components, and each component has a different behavior.\n\nFor example, a news feed is one component. Responsible for displaying the news list on the page. The Read button is another component. Responsible for switching from the news list page to the selected news.\n\nTypically, a component is programmed so that it displays an element on the screen and performs some kind of action. The component can respond to a click, collapse, expand, hide, redirect to another page, and so on.\n\nComponents obey life cycles - they change and work according to several programmed scenarios. Let's take a situation where we go from a news list page to a single news item. In this case, the \"News feed\" component is destroyed and, if necessary, recreated. Lifecycles offload memory and speed up the application.\n"
    },
    {
      "id": 2,
      "title": "10 main constructs of Swift language",
      "subtitle": "Quick language guide.",
      "type": "How to",
      "typeCode": "how-to",
      "date": "2021-03-03T00:33:19.394+00:00",
      "difficulty": "medium",
      "img": "https://thecode.media/wp-content/uploads/2021/03/photo_2021-03-04-12.09.20-1080x718.jpeg",
      "content": "When looking at front end jobs, we often see three words: Angular, React, and Vue. They are equivalent technologies that are equally popular and vary in detail. Diving into the details takes time, and therefore developers usually choose one thing - study what they like best.\n\nToday we will take a look at Angular. Let's figure out how the technology works and what you need to know to study it.\n\nAngular is a Google framework. It is needed to develop browser, desktop and mobile applications - those where you can quickly and seamlessly navigate the site.\nAngular works on the SPA principle, a single-page application. To understand what it is, one must first understand what it is not.\n\nThe traditional approach to web applications was something like this:\n\nThe user went to the site.\nThe browser sent a server request to find the desired address.\nThe server found the page and passed it to the site.\nA user looked at this page and clicked on some link.\nThe browser generated a second request, the server collected a new page and returned it to the site again. The cycle was repeated after each user action.\nThis can be compared to ordering food in a restaurant, with the only difference that you can order only one dish at a time. I ordered a salad, ate it, and only then ordered a hot one. Now you sit and wait for it to be brought to you. Ate hot - ordered tea. You wait for the kettle to boil. They brought tea - ordered dessert. You are waiting for the cakes to rise. Here's the same thing, only a thousand times faster.\n\nSlow sites annoyed everyone, and the developers came up with SPA - first the technology appeared, and then Angular and other tools for its implementation.\n\nWhat is SPA, single-page application\nSingle-page application stands for \"one page application\". It works like this:\n\nThe user goes to the site.\nThe browser sends a server request.\nThe server returns the page at the requested URL.\nWhile the user is on the first page, the server packs and transmits all other pages in the background.\nWhen a user needs to go to another page, he has everything he needs “in the background” already loaded.\nAngular applications are made up of independent elements. These elements are called components, and each component has a different behavior.\n\nFor example, a news feed is one component. Responsible for displaying the news list on the page. The Read button is another component. Responsible for switching from the news list page to the selected news.\n\nTypically, a component is programmed so that it displays an element on the screen and performs some kind of action. The component can respond to a click, collapse, expand, hide, redirect to another page, and so on.\n\nComponents obey life cycles - they change and work according to several programmed scenarios. Let's take a situation where we go from a news list page to a single news item. In this case, the \"News feed\" component is destroyed and, if necessary, recreated. Lifecycles offload memory and speed up the application.\n"
    },
    {
      "id": 3,
      "title": "Piano on JavaScript for Chrome",
      "subtitle": "Not 'Wild West World', but ok.",
      "type": "How to",
      "typeCode": "how-to",
      "date": "2021-02-27T00:51:12.134+00:00",
      "difficulty": "easy",
      "img": "https://thecode.media/wp-content/uploads/2021/03/photo_2021-03-03-12.51.40-1080x718.jpeg",
      "content": "When looking at front end jobs, we often see three words: Angular, React, and Vue. They are equivalent technologies that are equally popular and vary in detail. Diving into the details takes time, and therefore developers usually choose one thing - study what they like best.\n\nToday we will take a look at Angular. Let's figure out how the technology works and what you need to know to study it.\n\nAngular is a Google framework. It is needed to develop browser, desktop and mobile applications - those where you can quickly and seamlessly navigate the site.\nAngular works on the SPA principle, a single-page application. To understand what it is, one must first understand what it is not.\n\nThe traditional approach to web applications was something like this:\n\nThe user went to the site.\nThe browser sent a server request to find the desired address.\nThe server found the page and passed it to the site.\nA user looked at this page and clicked on some link.\nThe browser generated a second request, the server collected a new page and returned it to the site again. The cycle was repeated after each user action.\nThis can be compared to ordering food in a restaurant, with the only difference that you can order only one dish at a time. I ordered a salad, ate it, and only then ordered a hot one. Now you sit and wait for it to be brought to you. Ate hot - ordered tea. You wait for the kettle to boil. They brought tea - ordered dessert. You are waiting for the cakes to rise. Here's the same thing, only a thousand times faster.\n\nSlow sites annoyed everyone, and the developers came up with SPA - first the technology appeared, and then Angular and other tools for its implementation.\n\nWhat is SPA, single-page application\nSingle-page application stands for \"one page application\". It works like this:\n\nThe user goes to the site.\nThe browser sends a server request.\nThe server returns the page at the requested URL.\nWhile the user is on the first page, the server packs and transmits all other pages in the background.\nWhen a user needs to go to another page, he has everything he needs “in the background” already loaded.\nAngular applications are made up of independent elements. These elements are called components, and each component has a different behavior.\n\nFor example, a news feed is one component. Responsible for displaying the news list on the page. The Read button is another component. Responsible for switching from the news list page to the selected news.\n\nTypically, a component is programmed so that it displays an element on the screen and performs some kind of action. The component can respond to a click, collapse, expand, hide, redirect to another page, and so on.\n\nComponents obey life cycles - they change and work according to several programmed scenarios. Let's take a situation where we go from a news list page to a single news item. In this case, the \"News feed\" component is destroyed and, if necessary, recreated. Lifecycles offload memory and speed up the application.\n"
    },
    {
      "id": 4,
      "title": "X86 and ARM processors - what's the difference?",
      "subtitle": "Is it true that the processor in your mobile phone is more powerful than in your computer?",
      "type": "Questions",
      "typeCode": "questions",
      "date": "2021-02-22T00:24:49.354+00:00",
      "difficulty": "medium",
      "img": "https://thecode.media/wp-content/uploads/2021/03/photo_2021-03-02-13.30.46-1080x718.jpeg",
      "content": "When looking at front end jobs, we often see three words: Angular, React, and Vue. They are equivalent technologies that are equally popular and vary in detail. Diving into the details takes time, and therefore developers usually choose one thing - study what they like best.\n\nToday we will take a look at Angular. Let's figure out how the technology works and what you need to know to study it.\n\nAngular is a Google framework. It is needed to develop browser, desktop and mobile applications - those where you can quickly and seamlessly navigate the site.\nAngular works on the SPA principle, a single-page application. To understand what it is, one must first understand what it is not.\n\nThe traditional approach to web applications was something like this:\n\nThe user went to the site.\nThe browser sent a server request to find the desired address.\nThe server found the page and passed it to the site.\nA user looked at this page and clicked on some link.\nThe browser generated a second request, the server collected a new page and returned it to the site again. The cycle was repeated after each user action.\nThis can be compared to ordering food in a restaurant, with the only difference that you can order only one dish at a time. I ordered a salad, ate it, and only then ordered a hot one. Now you sit and wait for it to be brought to you. Ate hot - ordered tea. You wait for the kettle to boil. They brought tea - ordered dessert. You are waiting for the cakes to rise. Here's the same thing, only a thousand times faster.\n\nSlow sites annoyed everyone, and the developers came up with SPA - first the technology appeared, and then Angular and other tools for its implementation.\n\nWhat is SPA, single-page application\nSingle-page application stands for \"one page application\". It works like this:\n\nThe user goes to the site.\nThe browser sends a server request.\nThe server returns the page at the requested URL.\nWhile the user is on the first page, the server packs and transmits all other pages in the background.\nWhen a user needs to go to another page, he has everything he needs “in the background” already loaded.\nAngular applications are made up of independent elements. These elements are called components, and each component has a different behavior.\n\nFor example, a news feed is one component. Responsible for displaying the news list on the page. The Read button is another component. Responsible for switching from the news list page to the selected news.\n\nTypically, a component is programmed so that it displays an element on the screen and performs some kind of action. The component can respond to a click, collapse, expand, hide, redirect to another page, and so on.\n\nComponents obey life cycles - they change and work according to several programmed scenarios. Let's take a situation where we go from a news list page to a single news item. In this case, the \"News feed\" component is destroyed and, if necessary, recreated. Lifecycles offload memory and speed up the application.\n"
    },
    {
      "id": 5,
      "title": "What is SVG-graphics and why is it needed",
      "subtitle": "Simple drawing in CSS.",
      "type": "How to",
      "typeCode": "how-to",
      "date": "2021-03-11T00:33:47.854+00:00",
      "difficulty": "easy",
      "img": "https://thecode.media/wp-content/uploads/2021/03/photo_2021-03-11-15.00.08-1080x718.jpeg",
      "content": "When looking at front end jobs, we often see three words: Angular, React, and Vue. They are equivalent technologies that are equally popular and vary in detail. Diving into the details takes time, and therefore developers usually choose one thing - study what they like best.\n\nToday we will take a look at Angular. Let's figure out how the technology works and what you need to know to study it.\n\nAngular is a Google framework. It is needed to develop browser, desktop and mobile applications - those where you can quickly and seamlessly navigate the site.\nAngular works on the SPA principle, a single-page application. To understand what it is, one must first understand what it is not.\n\nThe traditional approach to web applications was something like this:\n\nThe user went to the site.\nThe browser sent a server request to find the desired address.\nThe server found the page and passed it to the site.\nA user looked at this page and clicked on some link.\nThe browser generated a second request, the server collected a new page and returned it to the site again. The cycle was repeated after each user action.\nThis can be compared to ordering food in a restaurant, with the only difference that you can order only one dish at a time. I ordered a salad, ate it, and only then ordered a hot one. Now you sit and wait for it to be brought to you. Ate hot - ordered tea. You wait for the kettle to boil. They brought tea - ordered dessert. You are waiting for the cakes to rise. Here's the same thing, only a thousand times faster.\n\nSlow sites annoyed everyone, and the developers came up with SPA - first the technology appeared, and then Angular and other tools for its implementation.\n\nWhat is SPA, single-page application\nSingle-page application stands for \"one page application\". It works like this:\n\nThe user goes to the site.\nThe browser sends a server request.\nThe server returns the page at the requested URL.\nWhile the user is on the first page, the server packs and transmits all other pages in the background.\nWhen a user needs to go to another page, he has everything he needs “in the background” already loaded.\nAngular applications are made up of independent elements. These elements are called components, and each component has a different behavior.\n\nFor example, a news feed is one component. Responsible for displaying the news list on the page. The Read button is another component. Responsible for switching from the news list page to the selected news.\n\nTypically, a component is programmed so that it displays an element on the screen and performs some kind of action. The component can respond to a click, collapse, expand, hide, redirect to another page, and so on.\n\nComponents obey life cycles - they change and work according to several programmed scenarios. Let's take a situation where we go from a news list page to a single news item. In this case, the \"News feed\" component is destroyed and, if necessary, recreated. Lifecycles offload memory and speed up the application.\n"
    },
    {
      "id": 6,
      "title": "Scout and Ninja problem",
      "subtitle": "There is only one winner.",
      "type": "Problem",
      "typeCode": "problem",
      "date": "2021-02-26T00:10:47.134+00:00",
      "difficulty": "hard",
      "img": "https://thecode.media/wp-content/uploads/2021/02/photo_2021-02-26-10.47.57-1080x718.jpeg",
      "content": "When looking at front end jobs, we often see three words: Angular, React, and Vue. They are equivalent technologies that are equally popular and vary in detail. Diving into the details takes time, and therefore developers usually choose one thing - study what they like best.\n\nToday we will take a look at Angular. Let's figure out how the technology works and what you need to know to study it.\n\nAngular is a Google framework. It is needed to develop browser, desktop and mobile applications - those where you can quickly and seamlessly navigate the site.\nAngular works on the SPA principle, a single-page application. To understand what it is, one must first understand what it is not.\n\nThe traditional approach to web applications was something like this:\n\nThe user went to the site.\nThe browser sent a server request to find the desired address.\nThe server found the page and passed it to the site.\nA user looked at this page and clicked on some link.\nThe browser generated a second request, the server collected a new page and returned it to the site again. The cycle was repeated after each user action.\nThis can be compared to ordering food in a restaurant, with the only difference that you can order only one dish at a time. I ordered a salad, ate it, and only then ordered a hot one. Now you sit and wait for it to be brought to you. Ate hot - ordered tea. You wait for the kettle to boil. They brought tea - ordered dessert. You are waiting for the cakes to rise. Here's the same thing, only a thousand times faster.\n\nSlow sites annoyed everyone, and the developers came up with SPA - first the technology appeared, and then Angular and other tools for its implementation.\n\nWhat is SPA, single-page application\nSingle-page application stands for \"one page application\". It works like this:\n\nThe user goes to the site.\nThe browser sends a server request.\nThe server returns the page at the requested URL.\nWhile the user is on the first page, the server packs and transmits all other pages in the background.\nWhen a user needs to go to another page, he has everything he needs “in the background” already loaded.\nAngular applications are made up of independent elements. These elements are called components, and each component has a different behavior.\n\nFor example, a news feed is one component. Responsible for displaying the news list on the page. The Read button is another component. Responsible for switching from the news list page to the selected news.\n\nTypically, a component is programmed so that it displays an element on the screen and performs some kind of action. The component can respond to a click, collapse, expand, hide, redirect to another page, and so on.\n\nComponents obey life cycles - they change and work according to several programmed scenarios. Let's take a situation where we go from a news list page to a single news item. In this case, the \"News feed\" component is destroyed and, if necessary, recreated. Lifecycles offload memory and speed up the application.\n"
    }
  ],
  "last-news": [
    {
      "id": 1,
      "title": "Invented: hydrogen peroxide satellite fuel",
      "type": "News",
      "typeCode": "news",
      "subtitle": "And bleach hair, and launch a satellite.",
      "img": "https://thecode.media/wp-content/uploads/2021/03/b25ly21zomzjyjrkntczltk0oditngvlzc1inmjhlwziyzflymnjndjjytoxzja4mjk1zc1iytzlltrmmgqtymjlys01zweyotlhmzu0zja-1080x720.jpg",
      "date": "2021-03-13T00:27:55.144+00:00",
      "content": "When looking at front end jobs, we often see three words: Angular, React, and Vue. They are equivalent technologies that are equally popular and vary in detail. Diving into the details takes time, and therefore developers usually choose one thing - study what they like best.\n\nToday we will take a look at Angular. Let's figure out how the technology works and what you need to know to study it.\n\nAngular is a Google framework. It is needed to develop browser, desktop and mobile applications - those where you can quickly and seamlessly navigate the site.\nAngular works on the SPA principle, a single-page application. To understand what it is, one must first understand what it is not.\n\nThe traditional approach to web applications was something like this:\n\nThe user went to the site.\nThe browser sent a server request to find the desired address.\nThe server found the page and passed it to the site.\nA user looked at this page and clicked on some link.\nThe browser generated a second request, the server collected a new page and returned it to the site again. The cycle was repeated after each user action.\nThis can be compared to ordering food in a restaurant, with the only difference that you can order only one dish at a time. I ordered a salad, ate it, and only then ordered a hot one. Now you sit and wait for it to be brought to you. Ate hot - ordered tea. You wait for the kettle to boil. They brought tea - ordered dessert. You are waiting for the cakes to rise. Here's the same thing, only a thousand times faster.\n\nSlow sites annoyed everyone, and the developers came up with SPA - first the technology appeared, and then Angular and other tools for its implementation.\n\nWhat is SPA, single-page application\nSingle-page application stands for \"one page application\". It works like this:\n\nThe user goes to the site.\nThe browser sends a server request.\nThe server returns the page at the requested URL.\nWhile the user is on the first page, the server packs and transmits all other pages in the background.\nWhen a user needs to go to another page, he has everything he needs “in the background” already loaded.\nAngular applications are made up of independent elements. These elements are called components, and each component has a different behavior.\n\nFor example, a news feed is one component. Responsible for displaying the news list on the page. The Read button is another component. Responsible for switching from the news list page to the selected news.\n\nTypically, a component is programmed so that it displays an element on the screen and performs some kind of action. The component can respond to a click, collapse, expand, hide, redirect to another page, and so on.\n\nComponents obey life cycles - they change and work according to several programmed scenarios. Let's take a situation where we go from a news list page to a single news item. In this case, the \"News feed\" component is destroyed and, if necessary, recreated. Lifecycles offload memory and speed up the application.\n"

    },
    {
      "id": 2,
      "title": "Space hurricanes have been proven",
      "type": "News",
      "typeCode": "news",
      "subtitle": "confirmed the existence of hurricanes in the upper atmosphere of the Earth.",
      "img": "https://thecode.media/wp-content/uploads/2021/03/210302-space-hurricane-qing-he-zhang-jm-1530-2426da_5a1fa87a2947fd7fae94363e19825d61f3ef30cf.nbcnews-fp-1200-630-1080x567.jpg",
      "date": "2021-03-05T00:43:19.264+00:00",
      "content": "When looking at front end jobs, we often see three words: Angular, React, and Vue. They are equivalent technologies that are equally popular and vary in detail. Diving into the details takes time, and therefore developers usually choose one thing - study what they like best.\n\nToday we will take a look at Angular. Let's figure out how the technology works and what you need to know to study it.\n\nAngular is a Google framework. It is needed to develop browser, desktop and mobile applications - those where you can quickly and seamlessly navigate the site.\nAngular works on the SPA principle, a single-page application. To understand what it is, one must first understand what it is not.\n\nThe traditional approach to web applications was something like this:\n\nThe user went to the site.\nThe browser sent a server request to find the desired address.\nThe server found the page and passed it to the site.\nA user looked at this page and clicked on some link.\nThe browser generated a second request, the server collected a new page and returned it to the site again. The cycle was repeated after each user action.\nThis can be compared to ordering food in a restaurant, with the only difference that you can order only one dish at a time. I ordered a salad, ate it, and only then ordered a hot one. Now you sit and wait for it to be brought to you. Ate hot - ordered tea. You wait for the kettle to boil. They brought tea - ordered dessert. You are waiting for the cakes to rise. Here's the same thing, only a thousand times faster.\n\nSlow sites annoyed everyone, and the developers came up with SPA - first the technology appeared, and then Angular and other tools for its implementation.\n\nWhat is SPA, single-page application\nSingle-page application stands for \"one page application\". It works like this:\n\nThe user goes to the site.\nThe browser sends a server request.\nThe server returns the page at the requested URL.\nWhile the user is on the first page, the server packs and transmits all other pages in the background.\nWhen a user needs to go to another page, he has everything he needs “in the background” already loaded.\nAngular applications are made up of independent elements. These elements are called components, and each component has a different behavior.\n\nFor example, a news feed is one component. Responsible for displaying the news list on the page. The Read button is another component. Responsible for switching from the news list page to the selected news.\n\nTypically, a component is programmed so that it displays an element on the screen and performs some kind of action. The component can respond to a click, collapse, expand, hide, redirect to another page, and so on.\n\nComponents obey life cycles - they change and work according to several programmed scenarios. Let's take a situation where we go from a news list page to a single news item. In this case, the \"News feed\" component is destroyed and, if necessary, recreated. Lifecycles offload memory and speed up the application.\n"

    },
    {
      "id": 3,
      "title": "New algorithm reviews scientific articles for scientists",
      "type": "News",
      "typeCode": "news",
      "subtitle": "Jarvis, what's new in the world of science?",
      "img": "https://thecode.media/wp-content/uploads/2021/03/1-anopensource-1080x534.jpg",
      "date": "2021-02-28T00:37:28.664+00:00",
      "content": "When looking at front end jobs, we often see three words: Angular, React, and Vue. They are equivalent technologies that are equally popular and vary in detail. Diving into the details takes time, and therefore developers usually choose one thing - study what they like best.\n\nToday we will take a look at Angular. Let's figure out how the technology works and what you need to know to study it.\n\nAngular is a Google framework. It is needed to develop browser, desktop and mobile applications - those where you can quickly and seamlessly navigate the site.\nAngular works on the SPA principle, a single-page application. To understand what it is, one must first understand what it is not.\n\nThe traditional approach to web applications was something like this:\n\nThe user went to the site.\nThe browser sent a server request to find the desired address.\nThe server found the page and passed it to the site.\nA user looked at this page and clicked on some link.\nThe browser generated a second request, the server collected a new page and returned it to the site again. The cycle was repeated after each user action.\nThis can be compared to ordering food in a restaurant, with the only difference that you can order only one dish at a time. I ordered a salad, ate it, and only then ordered a hot one. Now you sit and wait for it to be brought to you. Ate hot - ordered tea. You wait for the kettle to boil. They brought tea - ordered dessert. You are waiting for the cakes to rise. Here's the same thing, only a thousand times faster.\n\nSlow sites annoyed everyone, and the developers came up with SPA - first the technology appeared, and then Angular and other tools for its implementation.\n\nWhat is SPA, single-page application\nSingle-page application stands for \"one page application\". It works like this:\n\nThe user goes to the site.\nThe browser sends a server request.\nThe server returns the page at the requested URL.\nWhile the user is on the first page, the server packs and transmits all other pages in the background.\nWhen a user needs to go to another page, he has everything he needs “in the background” already loaded.\nAngular applications are made up of independent elements. These elements are called components, and each component has a different behavior.\n\nFor example, a news feed is one component. Responsible for displaying the news list on the page. The Read button is another component. Responsible for switching from the news list page to the selected news.\n\nTypically, a component is programmed so that it displays an element on the screen and performs some kind of action. The component can respond to a click, collapse, expand, hide, redirect to another page, and so on.\n\nComponents obey life cycles - they change and work according to several programmed scenarios. Let's take a situation where we go from a news list page to a single news item. In this case, the \"News feed\" component is destroyed and, if necessary, recreated. Lifecycles offload memory and speed up the application.\n"

    },
    {
      "id": 4,
      "title": "Russia has created electronics to control artificial organs",
      "type": "News",
      "typeCode": "news",
      "subtitle": "The nervous system will be able to control artificial organs.",
      "img": "https://thecode.media/wp-content/uploads/2021/03/p10155.jpg",
      "date": "2021-03-14T00:52:48.113+00:00",
      "content": "When looking at front end jobs, we often see three words: Angular, React, and Vue. They are equivalent technologies that are equally popular and vary in detail. Diving into the details takes time, and therefore developers usually choose one thing - study what they like best.\n\nToday we will take a look at Angular. Let's figure out how the technology works and what you need to know to study it.\n\nAngular is a Google framework. It is needed to develop browser, desktop and mobile applications - those where you can quickly and seamlessly navigate the site.\nAngular works on the SPA principle, a single-page application. To understand what it is, one must first understand what it is not.\n\nThe traditional approach to web applications was something like this:\n\nThe user went to the site.\nThe browser sent a server request to find the desired address.\nThe server found the page and passed it to the site.\nA user looked at this page and clicked on some link.\nThe browser generated a second request, the server collected a new page and returned it to the site again. The cycle was repeated after each user action.\nThis can be compared to ordering food in a restaurant, with the only difference that you can order only one dish at a time. I ordered a salad, ate it, and only then ordered a hot one. Now you sit and wait for it to be brought to you. Ate hot - ordered tea. You wait for the kettle to boil. They brought tea - ordered dessert. You are waiting for the cakes to rise. Here's the same thing, only a thousand times faster.\n\nSlow sites annoyed everyone, and the developers came up with SPA - first the technology appeared, and then Angular and other tools for its implementation.\n\nWhat is SPA, single-page application\nSingle-page application stands for \"one page application\". It works like this:\n\nThe user goes to the site.\nThe browser sends a server request.\nThe server returns the page at the requested URL.\nWhile the user is on the first page, the server packs and transmits all other pages in the background.\nWhen a user needs to go to another page, he has everything he needs “in the background” already loaded.\nAngular applications are made up of independent elements. These elements are called components, and each component has a different behavior.\n\nFor example, a news feed is one component. Responsible for displaying the news list on the page. The Read button is another component. Responsible for switching from the news list page to the selected news.\n\nTypically, a component is programmed so that it displays an element on the screen and performs some kind of action. The component can respond to a click, collapse, expand, hide, redirect to another page, and so on.\n\nComponents obey life cycles - they change and work according to several programmed scenarios. Let's take a situation where we go from a news list page to a single news item. In this case, the \"News feed\" component is destroyed and, if necessary, recreated. Lifecycles offload memory and speed up the application.\n"
    }
  ],
  "sections": [
    {
      "id": 1,
      "type": "News",
      "typeCode": "news",
      "img": "https://thecode.media/wp-content/uploads/2019/11/4-1.png",
      "description": "Technology, programming, development and Elon Musk news"
    },
    {
      "id": 2,
      "type": "How to",
      "typeCode": "how-to",
      "img": "https://thecode.media/wp-content/uploads/2019/11/1-2.png",
      "description": "How everything works in the world of IT and development. Explaining the last time"
    },
    {
      "id": 3,
      "type": "Problem",
      "typeCode": "problem",
      "img": "https://thecode.media/wp-content/uploads/2019/11/3-1.png",
      "description": "Tasks that recruiters used to scare young programmers, and now we scare you"
    },
    {
      "id": 4,
      "type": "Questions",
      "typeCode": "questions",
      "img": "https://thecode.media/wp-content/uploads/2020/03/icon-code_5.png",
      "description": "Shameful questions about the world of development and IT"
    }
  ]
}
